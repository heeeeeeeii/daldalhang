<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.daldalhang.ver01, dao, service, vo" />
	
	<!-- 1) JDBC Connection -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
	 	<beans:property name="username" value="system" />
		<beans:property name="password" value="oracle" />
	</beans:bean>
	
	<!-- 
	2)    Mybatis 설정 
	   	  => SqlSessionFactory -> sqlSessionTemplate
	2.1)  SqlSessionFactory
	 	  - MyBatis 와 연동시 DB 연결과 SQL 실행의 핵심 클래스
	 	  - SqlSessionFactoryBean 에 의해 생성됨
	-->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<beans:property name="dataSource" ref="dataSource" />
	 	<beans:property name="configLocation" value="classpath:/mybatis-config.xml"/>
	 	<beans:property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml"/>
	</beans:bean>
	
	<!-- 
	 2.2) SqlSessionTemplate
	 	- DAO 의 DB연결 & Close 기능, sql 문 처리 담당
	 	- sqlSessionFactory 를 생성자로 주입해서 설정
	-->
	<beans:bean id ="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
	<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />	 							 	 							 
	</beans:bean>
	
</beans:beans>
